if (argc == 2)
  {
      
        FILE *file;
        char buf[256];
        //int sz;
        i=0x00;
        serial=0x31; //DVPSPD port0x31h
        subaddr=0xa0;  //Slave address 
        if(argc != 2)
        { 
        printf("command: i2c <filename>\n"); 
        } 

        file = fopen(argv[1], "rb");
        if(!file)
        { 
        printf("command: i2c <filename>\n"); 
        }
        /* get file size */
        //fseek(file, 0L, SEEK_END);
        //sz = ftell(file);
        //printf("file size=%3d\n",sz);
        printf("==========VIA I2C Flash EEPRM Tool V1.0==========\n");
        printf("Starting Read date and write to EEPROM...\n");
        while(1)
        {
        fread(&ch, sizeof(char), 1, file);
        if(feof(file)) break;
        buf[i] = ch;
        write_data(addr+i, buf[i]);
        delay(100);
        if(count > 15)
        {  
            //putchar('\n'); 
            count = 0; 
        } 
        //printf("%2X ", buf[i]);
        count++; 
        i++;
        } 
        putchar('\n');

        fclose(file);

        // show all register
        printf("I2C 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n");
        printf("---------------------------------------------------\n");
        for (j=0; j<0x10; j++)
        {
        printf("%02x ",j);
        for(i=0; i<0x10; i++)
        {
            addr = j*0x10 + i;
            temp = read_data(addr);
            if (j <= 7)
                sum += temp;    // do 128 bytes check sum
            printf(" %02x", temp);
        }
        printf("\n");
        }
        printf("Check Sum = %02x\n", sum);
  }